// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pagination.Data;

#nullable disable

namespace pagination.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("pagination.Data.FirstExampleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Sorting_FirstName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("1_FirstExample", (string)null);
                });

            modelBuilder.Entity("pagination.Data.ForthExampleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Sorting_FirstName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("4_ForthExample", (string)null);
                });

            modelBuilder.Entity("pagination.Data.SecondExampleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Sorting_FirstName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("2_SecondExample", (string)null);
                });

            modelBuilder.Entity("pagination.Data.Seed", b =>
                {
                    b.Property<int>("ExampleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("ExampleId");

                    b.ToTable("__seeds", (string)null);
                });

            modelBuilder.Entity("pagination.Data.ThirdExampleData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Sorting_FirstName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("3_ThirdExample", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
